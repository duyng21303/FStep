@using Microsoft.AspNetCore.Http.Extensions
@model FStep.ViewModels.TransactionVM
@{
	ViewData["Title"] = "TransactionExchangeDetail";
	var format = System.Globalization.CultureInfo.GetCultureInfo("vi-VN");
	ViewBag.url = Context.Request.GetDisplayUrl();
}
<!--Detail Exchange-->
<div class="d-flex justify-content-center align-items-center mx-5 my-5">
	<div class="card" style="border-radius: 10px;">
		<div class="card-header px-3 py-3">
			<div class="d-flex justify-content-between align-items-center">
				@if (Model.UserBuyer.Name != null)
				{
					<h5 class="text-muted">Cảm ơn, <span style="color: #3572EF;">@Model.UserBuyer.Name</span>!</h5>
				}
				else
				{
					<h5 class="text-muted">Cảm ơn, <span style="color: #3572EF;">@Model.UserBuyer.IdUser</span>!</h5>
				}
				<div>
					@if (User.Identity.IsAuthenticated)
					{
						@if (User.Claims.FirstOrDefault(c => c.Type == "UserID").Value.Equals(Model.UserBuyer.IdUser))
						{
							@if (DateTime.Now.CompareTo(Model.DeliveryDate?.AddDays(7)) <= 0 && Model.Transaction.Status == "Completed" && !Model.CheckFeedback)
							{
								<a data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-sm px-5 py-2" type="button" asp-action="Feedback" asp-controller="Feedback" asp-route-idPost="@Model.Post.IdPost" asp-route-idTransaction="@Model.TransactionId" asp-route-url="@ViewBag.url">
									Đánh giá
								</a>
							}
							else
							{
								<button disabled data-mdb-button-init data-mdb-ripple-init class="btn btn-sm px-5 py-2 bg-dark text-light bg-opacity-50" type="button">
									Đánh giá
								</button>
							}
							@if (DateTime.Now.CompareTo(Model.CreateDate?.AddDays(3)) <= 0 && Model.Transaction.Status == "Processing")
							{
								<a data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-sm px-4 py-2" type="button" data-bs-toggle="modal" data-bs-target="#cancelModal">
									Huỷ đơn hàng
								</a>
							}
							else
							{
								<button disabled data-mdb-button-init data-mdb-ripple-init class="btn btn-sm px-4 py-2 bg-dark text-light bg-opacity-50" type="button">
									Huỷ đơn hàng
								</button>
							}
						}
					}
				</div>
			</div>
		</div>
		<div class="card-body row p-4">
			<div class="d-flex justify-content-between align-items-center mb-4">
				<h4 class="lead fw-bold mb-0" style="color: #3572EF;">Giao dịch</h4>
				<h4 class="small mb-0">Mã giao dịch : <span class="text-danger">@Model.Transaction.CodeTransaction</span></h4>
			</div>
			<div class="card shadow-0 border mb-4">
				<div class="card-body">
					<div class="row">

						<div class="exchange-container">
							<!-- Your Item -->
							<div class="exchange-item text-center">
								<div class="user-info">
									<img src="/img/userAvar/@Model.UserBuyer.AvatarImg" alt="Other User" class="user-image" style="width: 50px; height: 50px; border-radius: 50%;">
									<div>
										<h5>@Model.UserBuyer.Name</h5>
									</div>
								</div>
								<img src="/img/postPic/@Model.CommentExchangeVM.Img" alt="Other Item" class="img-fluid rounded mh-100">
								<p>@Html.Raw(Model.CommentExchangeVM.Content)</p>
							</div>

							<!-- Exchange Icon -->
							<div class="d-flex align-items-center justify-content-center">
								<i class="fa fa-exchange-alt exchange-icon" aria-hidden="true"></i>
							</div>

							<!-- Other Person's Item -->
							<div class="exchange-item text-center">
								<div class="user-info">
									<img src="/img/userAvar/@Model.UserSeller.AvatarImg" alt="Other User" class="user-image" style="width: 50px; height: 50px; border-radius: 50%;">
									<div>
										<h5>@Model.UserSeller.Name</h5>
									</div>
								</div>
								<a asp-action="DetailPost" asp-controller="Post" asp-route-id="@Model.Post.IdPost">
									<img src="/img/postPic/@Model.Post.Img" alt="Other Item" class="img-fluid rounded mh-100">
								</a>
								<a asp-action="DetailPost" asp-controller="Post" asp-route-id="@Model.Post.IdPost" style="text-decoration:none; color:black">
									<p>@Html.Raw(Model.Post.Detail)</p>
								</a>
							</div>
						</div>

					</div>
				</div>
			</div>

			<div class="d-flex justify-content-between pt-2">
				<h4 class="fw-bold mb-0">Chi tiết</h4>
			</div>

			<div class="d-flex justify-content-between pt-2">
				<h5 class="small text-muted mb-0">Ngày đặt hàng: <span>@Model.CreateDate?.ToString("MM/dd/yyyy hh:mm tt")</span></h5>
				<h5 class="text-muted mb-0"><span class="fw-bold me-4">Tổng</span> @String.Format(format, "{0:0,0 VND}", 0)</h5>
			</div>

			<div class="d-flex justify-content-between">
				@if (Model.Transaction.Status == "Completed")
				{
					<h5 class="small text-muted mb-0">Ngày nhận hàng: <span>@Model.DeliveryDate?.ToString("MM/dd/yyyy hh:mm tt")</span></h5>
				}
				else
				@if (Model.Transaction.Status == "Canceled")
				{
					<h5 class="small text-muted mb-0">Ngày huỷ: <span>@Model.CancelDate?.ToString("MM/dd/yyyy hh:mm tt")</span></h5>
				}
				else
				{
					<h5 class="small text-muted mb-0">-----</h5>
				}
				<h5 class="text-muted mb-0"><span class="fw-bold me-4">Giảm giá</span>@String.Format(format, "{0:0,0 VND}", 0)</h5>
			</div>
		</div>
		@* <div class="card-footer border-0 px-3 py-3"
		style="background-color: #3572EF; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;">
		<h5 class="d-flex align-items-center justify-content-end text-white text-uppercase mb-0">
		Tổng tiền: @String.Format(format, "{0:0,0 VND}", Model.Amount)
		</h5>
		</div> *@
	</div>
</div>



<div class="modal fade" id="cancelModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	@await Html.PartialAsync("Cancel", new CancelVM()
{
	TransactionId = Model.TransactionId,
	ReturnUrl = ViewBag.url
})
</div>