@using FStep.ViewModels
@using System.Security.Claims
@model PagingModel<ReportVM>
@{
	var userRole = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value;
	Layout = "_LayoutAdmin";

	if (!string.IsNullOrEmpty(userRole) && userRole == "Moderator")
	{
		Layout = "_LayoutModer";
	}

}

<div class="container py-5">
	@Html.AntiForgeryToken()
	<div class="row">
		<div class="col-lg-12">
			<h2 class="page-header">Quản lý báo cáo</h2>
		</div>
		<!--  tìm kiếm phía bên phải -->
		<div class="col-lg-12">
			<form asp-action="ReportManager" asp-controller="Admin" method="get" class="d-flex justify-content-end" id="searchUserForm">
				<div class="input-group mb-3 w-25">
					<input type="text" class="form-control" name="search" placeholder="Tìm kiếm theo nội dung" value="@Model.PagingInfo.Search">
					<button class="btn btn-outline-secondary" type="submit">Tìm kiếm</button>
				</div>
			</form>
		</div>
		<div class="col-lg-12">
			<div class="main-box clearfix">
				<div class="table-responsive table-max-height">
					<table class="table user-list">
						<thead>
							<tr>
								<th><span>Người báo cáo</span></th>
								<th><span>Người bị báo cáo</span></th>
								<th><span>Tên bài đăng</span></th>
								<th><span>Nội dung báo cáo</span></th>
								<th><span>Nội dung bị báo cáo</span></th>
								<th><span>Loại</span></th>
								<th><span>Điểm uy tín</span></th>
								<th class="text-center">&nbsp;</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var user in Model.Items)
							{
								<tr>
									<td>
										<a asp-action="UserDetail" asp-controller="Admin" asp-route-id="@user.IdUser" style="float: left;">
											<img class="rounded-circle me-lg-2 product-rating__avatar-img" src="~/img/userAvar/@user.UserAvatar" alt="" style="width: 40px; height: 40px;">
										</a>
										<a asp-action="UserDetail" asp-controller="Admin" asp-route-id="@user.IdUser" class="user-link">@user.UserFullName</a>
										<span class="user-subhead">Thời gian: @user.Date?.ToString("dd/MM/yyyy HH:mm:ss")</span>
									</td>
									<td>
										<a asp-action="UserDetail" asp-controller="Admin" asp-route-id="@user.IdUserComment" style="float: left;">
											<img class="rounded-circle me-lg-2 product-rating__avatar-img" src="~/img/userAvar/@user.UserCommentAvatar" alt="" style="width: 40px; height: 40px;">
										</a>
										<a asp-action="UserDetail" asp-controller="Admin" asp-route-id="@user.IdUserComment" class="user-link">@user.UserCommentFullName</a>
									</td>
									<td>
										<span>
											<a asp-action="DetailPost" asp-controller="Post" asp-route-id="@user.IdPost" class="user-link">@user.PostName</a>
										</span>
									</td>
									<td>
										<span class="label label-default">@user.Content</span>
									</td>
									<td>
										<span class="label label-default">@user.CommentContent</span>
									</td>
									<td>
										<span class="label label-default">@(user.IdTransaction == null ? "Bình luận" : "Sau khi mua hàng")</span>
									</td>
									<td>
										<span class="label label-default">@user.PointRating</span>
									</td>
									<td style="width: 20%;" class="text-center">
										<button class="btn btn-sm btn-primary btn-point-rating" data-comment="@user.IdReport"
												data-idtransaction="@user.IdTransaction" data-idcomment="@user.IdComment">
											Trừ điểm và xóa
										</button>
										<button class="btn btn-sm btn-secondary btn-reject-comment" data-report="@user.IdReport"
												data-idtransaction="@user.IdTransaction" data-idcomment="@user.IdComment">
											Từ chối
										</button>
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
				@Html.Partial("_Pagination", Model.PagingInfo, new ViewDataDictionary(ViewData) { { "asp-action", "CommentManager" }, { "asp-controller", "Admin" } })
			</div>
		</div>
	</div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {

			let timeout;
			$('#searchUserForm').on('input', function () {
				clearTimeout(timeout); // Xóa timeout hiện tại nếu có
				timeout = setTimeout(function () {
					$('#searchUserForm').submit(); // Gửi form khi thời gian chờ (debounce) kết thúc
				}, 200); // Thời gian debounce là 200ms (có thể điều chỉnh theo nhu cầu của bạn)
			});

            $('.btn-point-rating').on('click', function () {
                let commentId = $(this).data('comment');
                let idTransaction = $(this).data('idtransaction');
                let idComment = $(this).data('idcomment');
                let token = $('input[name="__RequestVerificationToken"]').val();
                let text = "Bạn có muốn trừ 10 điểm của người đã bình luận bài này";

                let reportObject = {
                    IdReport: commentId
                };

                if (idTransaction) {
                    reportObject.IdTransaction = idTransaction;
                    text = "Bạn có muốn trừ 20 điểm của người đã đăng bán bài này";
                } else {
                    reportObject.IdComment = idComment;
                }

                Swal.fire({
                    title: text,
                    showCancelButton: true,
                    confirmButtonText: "Có",
                    cancelButtonText: "Không"
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch('/Admin/PointHandler', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': token
                            },
                            body: JSON.stringify(reportObject)
                        })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            window.location.reload();
                        })
                        .catch(error => {
                            Swal.fire("Đã có lỗi xảy ra", "", "error");
                        });
                    }
                });
            });

            $('.btn-delete-comment').on('click', function () {
                let commentId = $(this).data('comment');
                let idTransaction = $(this).data('idtransaction');
                let idComment = $(this).data('idcomment');
                let token = $('input[name="__RequestVerificationToken"]').val();

                let reportObject = {
                    IdReport: commentId
                };

                if (idTransaction) {
                    reportObject.IdTransaction = idTransaction;
                } else {
                    reportObject.IdComment = idComment;
                }

				Swal.fire({
					title: `Bạn có muốn xóa báo cáo này không`,
					showCancelButton: true,
					confirmButtonText: "Có",
					cancelButtonText: "Không"
				}).then((result) => {
					if (result.isConfirmed) {
						fetch('/Admin/DeleteReport', {
							method: 'POST',
							headers: {
								'Content-Type': 'application/json',
								'RequestVerificationToken': token
							},
							body: JSON.stringify(reportObject)
						})
							.then(response => {
								if (!response.ok) {
									throw new Error('Network response was not ok');
								}
								window.location.reload();
							})
							.catch(error => {
								Swal.fire("Đã có lỗi xảy ra", "", "error");
							});
					}
				});
			});

			$('.btn-reject-comment').on('click', function () {
				let report = $(this).data('report');
				let token = $('input[name="__RequestVerificationToken"]').val();

				let reportObject = {
					IdReport: report
				};
				Swal.fire({
					title: `Bạn có muốn từ chối báo cáo này không`,
					showCancelButton: true,
					confirmButtonText: "Có",
					cancelButtonText: "Không"
				}).then((result) => {
					if (result.isConfirmed) {
						fetch('/Admin/RejectReport', {
							method: 'POST',
							headers: {
								'Content-Type': 'application/json',
								'RequestVerificationToken': token
							},
							body: JSON.stringify(reportObject)
						})
							.then(response => {
								if (!response.ok) {
									throw new Error('Network response was not ok');
								}
								window.location.reload();
							})
							.catch(error => {
								Swal.fire("Đã có lỗi xảy ra", "", "error");
							});
					}
				});
			});
		});
	</script>
}
<style>
	/* USER LIST TABLE */
	.user-list tbody td > img {
		position: relative;
		max-width: 50px;
		float: left;
		margin-right: 15px;
	}

	.user-list tbody td .user-link {
		display: block;
		font-size: 1.25em;
		padding-top: 3px;
	}

	.user-list tbody td .user-subhead {
		font-size: 0.875em;
		font-style: italic;
	}

	/* TABLES */
	.table {
		border-collapse: separate;
	}

	.table-hover > tbody > tr:hover > td,
	.table-hover > tbody > tr:hover > th {
		background-color: #eee;
	}

	.table thead > tr > th {
		border-bottom: 1px solid #C2C2C2;
		padding-bottom: 0;
	}

	.table thead > tr {
		position: sticky;
		top: 0;
		background-color: #fff;
		z-index: 999;
	}

	.table tbody > tr > td {
		font-size: 0.875em;
		background: #f5f5f5;
		border-top: 10px solid #fff;
		vertical-align: middle;
		padding: 12px 8px;
	}

		.table tbody > tr > td:first-child,
		.table thead > tr > th:first-child {
			padding-left: 20px;
		}

	.table thead > tr > th span {
		border-bottom: 2px solid #C2C2C2;
		display: inline-block;
		padding: 0 5px;
		padding-bottom: 5px;
		font-weight: normal;
	}

	.table thead > tr > th > a span {
		color: #344644;
	}

		.table thead > tr > th > a span:after {
			content: "\f0dc";
			font-family: FontAwesome;
			font-style: normal;
			font-weight: normal;
			text-decoration: inherit;
			margin-left: 5px;
			font-size: 0.75em;
		}

	.table thead > tr > th > a.asc span:after {
		content: "\f0dd";
	}

	.table thead > tr > th > a.desc span:after {
		content: "\f0de";
	}

	.table thead > tr > th > a:hover span {
		text-decoration: none;
		color: #2bb6a3;
		border-color: #2bb6a3;
	}

	.table.table-hover tbody > tr > td {
		-webkit-transition: background-color 0.15s ease-in-out 0s;
		transition: background-color 0.15s ease-in-out 0s;
	}

	.table tbody tr td .call-type {
		display: block;
		font-size: 0.75em;
		text-align: center;
	}

	.table tbody tr td .first-line {
		line-height: 1.5;
		font-weight: 400;
		font-size: 1.125em;
	}

		.table tbody tr td .first-line span {
			font-size: 0.875em;
			color: #969696;
			font-weight: 300;
		}

	.table tbody tr td .second-line {
		font-size: 0.875em;
		line-height: 1.2;
	}

	.table a.table-link {
		margin: 0 5px;
		font-size: 1.125em;
	}

		.table a.table-link:hover {
			text-decoration: none;
			color: #2aa493;
		}

		.table a.table-link.danger {
			color: #fe635f;
		}

			.table a.table-link.danger:hover {
				color: #dd504c;
			}

	.table-products tbody > tr > td {
		background: none;
		border: none;
		border-bottom: 1px solid #ebebeb;
		-webkit-transition: background-color 0.15s ease-in-out 0s;
		transition: background-color 0.15s ease-in-out 0s;
		position: relative;
	}

	.table-products tbody > tr:hover > td {
		text-decoration: none;
		background-color: #f6f6f6;
	}

	.table-products .name {
		display: block;
		font-weight: 600;
		padding-bottom: 7px;
	}

	.table-products .price {
		display: block;
		text-decoration: none;
		width: 50%;
		float: left;
		font-size: 0.875em;
	}

		.table-products .price > i {
			color: #8dc859;
		}

	.table-products .warranty {
		display: block;
		text-decoration: none;
		width: 50%;
		float: left;
		font-size: 0.875em;
	}

		.table-products .warranty > i {
			color: #f1c40f;
		}

	.table tbody > tr.table-line-fb > td {
		background-color: #9daccb;
		color: #262525;
	}

	.table tbody > tr.table-line-twitter > td {
		background-color: #9fccff;
		color: #262525;
	}

	.table tbody > tr.table-line-plus > td {
		background-color: #eea59c;
		color: #262525;
	}

	.table-stats .status-social-icon {
		font-size: 1.9em;
		vertical-align: bottom;
	}

	.table-stats .table-line-fb .status-social-icon {
		color: #556484;
	}

	.table-stats .table-line-twitter .status-social-icon {
		color: #5885b8;
	}

	.table-stats .table-line-plus .status-social-icon {
		color: #a75d54;
	}

	.table-max-height {
		max-height: calc(100vh - 300px);
		overflow: auto;
	}
</style>
