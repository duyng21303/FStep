@model X.PagedList.IPagedList<FStep.ViewModels.ListPostVM>
@using X.PagedList.Mvc.Core;

@{
	var successMessage = TempData["SuccessMessage"] as string;
	var errorMessage = TempData["ErrorMessage"] as string;
}

@if (!string.IsNullOrEmpty(successMessage))
{
	<div id="successMessage" class="alert alert-success alert-dismissible fade show" role="alert">
		@successMessage
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
	</div>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
	<div id="errorMessage" class="alert alert-danger alert-dismissible fade show" role="alert">
		@errorMessage
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
	</div>
}
<div>
	<!-- Header body  -->
	<!-- Title header body  -->
	<div class="row align-items-center mb-8 search-header">
		<div>
			<div class="row">
				<div class="col-md-5 d-flex justify-content-between align-items-center">
					<p class="mb-0">Tổng Số Bài Đã Duyệt: @ViewBag.ApprovedPostsCount</p>
				</div>
			</div>
		</div>
		<div class="custom-container">
			<!-- Start Content Body-->
			<div class="container">
				<div class="row mt-3">
					<div class="col">
						<table class="table table-striped">
							<thead class="thead-light">
								<tr>
									<th scope="col">Mã</th>
									<th scope="col">Ảnh</th>
									<th scope="col">Tên</th>
									<th scope="col">MSSV</th>
									<th scope="col">Ngày Tạo</th>
									<th scope="col">Hạn Còn</th>
									<th scope="col">Trạng thái</th>
									<th scope="col">Tác vụ</th>
								</tr>
							</thead>
							<tbody>
								<!-- Loop through posts -->
								@foreach (var item in Model)
								{
									<tr>
										<td>@Html.Raw(item.PostId)</td>
										<td><img src="@Url.Content("~/img/postPic/" + item.Image)" class="img-fluid small-rounded-image" alt="Post Image"></td>
										<td class="post-title">@Html.Raw(item.PostTitle)</td>
										<td class="post-studentid">@Html.Raw(item.StudentId)</td>
										<td>@Html.Raw(item.CreateDate.ToString("yyyy-MM-dd"))</td>
										<td>@Html.Raw(item.DaysRemaining)</td>
										<td>
											@switch (item.Status.ToLower())
											{
												case "true":
													<span class="badge bg-primary badge-custom badge-dark-text">Đã Duyệt</span>
													break;
												case "rejected":
													<span class="badge bg-warning text-dark badge-custom badge-dark-text">Từ Chối</span>
													break;
												case "false":
													<span class="badge bg-success badge-custom badge-dark-text">Hoàn Thành</span>
													break;
												case "trading":
													<span class="badge bg-info text-dark badge-custom badge-dark-text">Giao Dịch</span>
													break;
												default:
													<span class="badge bg-secondary badge-custom badge-dark-text">Đã Ẩn</span>
													break;
											}
										</td>
										@if (item.Status == "False")
										{
											<td style="width: 120px">
												<form asp-controller="ModeManagePost" asp-action="UpdateStatusAgain" method="post" onsubmit="return confirmApprove()">
													<input type="hidden" name="id" value="@item.PostId" /> <!-- Ensure the input name matches your action parameter -->
													<button type="submit" class="btn btn-success">Duyệt lại</button>
												</form>
											</td>
											<td style="width: 60px">
												<form asp-controller="ModeManagePost" asp-action="FinishPost" method="post" onsubmit="return confirmDelete()">
													<input type="hidden" name="id" value="@item.PostId"  />
													<button type="submit" class="btn btn-danger btn-sm" style="width: 60px">Xóa</button>
												</form>
											</td>
										}
										@if (item.Status == "True")
										{
											<td style="width: 120px">

												<form asp-controller="ModeManagePost" asp-action="FinishPost" method="post" onsubmit="return confirmDelete()">
													<input type="hidden" name="id" value="@item.PostId" />
													<button type="submit" class="btn btn-danger btn-sm" style="width: 60px">Xóa</button>
												</form>
											</td>
										}
										@if (string.IsNullOrEmpty(@item.Location) && @item.Status == "Trading") //checks if the Location is either null or an empty string.
										{
											<td>
												<form asp-controller="ModeManagePost" asp-action="AddLocation" method="post" class="add-location-form">
													<div class="input-group input-group-sm compact-form">
														<input type="text" name="location" class="form-control" placeholder="Nhập vị trí" aria-label="Location" required>
														<input type="hidden" name="id" value="@item.PostId" />
														<button class="btn btn-primary" type="submit">Thêm</button>
													</div>
												</form>
											</td>
										}
									</tr>
								}
								<!-- End loop -->
							</tbody>
						</table>
					</div>
				</div>
			</div>
			@Html.PagedListPager(Model, page => Url.Action("ManagePosts", new { approvedQuery = ViewBag.ApprovedQuery, currentTab = "approvedPosts", approvedPage = page, pendingPage = ViewBag.PendingPage }))
			<!-- End Content Body -->
		</div>
	</div>
</div>
<style>
	.add-location-form {
		display: inline-block;
		width: 150px; /* Adjust the width as needed */
	}

		.add-location-form .form-control {
			max-width: none; /* Remove the inline max-width style */
			width: 100%; /* Make the input take the full width of the form */
		}

</style>