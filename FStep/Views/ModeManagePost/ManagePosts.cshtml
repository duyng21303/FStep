@model FStep.ViewModels.ManagePostsVM

@{
	var successMessage = TempData["SuccessMessage"] as string;
	var errorMessage = TempData["ErrorMessage"] as string;
}

@if (!string.IsNullOrEmpty(successMessage))
{
	<div id="successMessage" class="alert alert-success alert-dismissible fade show" role="alert">
		@successMessage
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
	</div>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
	<div id="errorMessage" class="alert alert-danger alert-dismissible fade show" role="alert">
		@errorMessage
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
	</div>
}
@{
	ViewData["Title"] = "Quản lý bài đăng";
}
<h1>Quản lý bài đăng</h1>

	<div class="row mt-4">
		<div class="col-md-3">
			<div class="list-group">
				<a href="#pendingPosts" class="list-group-item list-group-item-action active" id="btnPendingPosts" onclick="showTab('pendingPosts')">Chờ Duyệt</a>
				<a href="#approvedPosts" class="list-group-item list-group-item-action" id="btnApprovedPosts" onclick="showTab('approvedPosts')">Đã Duyệt</a>
			</div>
		</div>
		<div class="col-md-9">
			<div id="pendingPosts" class="tabcontent">
			<form method="get" asp-action="ManagePosts">
				<input type="hidden" name="approvedQuery" value="@ViewBag.ApprovedQuery" />
				<input type="text" name="pendingQuery" value="@ViewBag.PendingQuery" placeholder="Search by Student ID" />
				<input type="hidden" name="currentTab" value="pendingPosts" />
				<input type="hidden" name="pendingPage" value="1" /> <!-- Reset page to 1 on new search -->
				<button type="submit">Search</button>
			</form>
				@await Html.PartialAsync("_PendingPostsPartial", Model.PendingPosts)
			</div>
			<div id="approvedPosts" class="tabcontent" style="display: none;">
			<form method="get" asp-action="ManagePosts">
				<input type="hidden" name="pendingQuery" value="@ViewBag.PendingQuery" />
				<input type="text" name="approvedQuery" value="@ViewBag.ApprovedQuery" placeholder="Search by Student ID" />
				<input type="hidden" name="currentTab" value="approvedPosts" />
				<input type="hidden" name="approvedPage" value="1" /> <!-- Reset page to 1 on new search -->
				<button type="submit">Search</button>
			</form>
				@await Html.PartialAsync("_ApprovedPostsPartial", Model.ApprovedPosts)
			</div>
		</div>
	</div>

@section Scripts {
	<script>
		function showTab(tabId) {
			document.querySelectorAll('.tabcontent').forEach(tab => tab.style.display = 'none');
			document.querySelectorAll('.list-group-item').forEach(link => link.classList.remove('active'));
			document.getElementById(tabId).style.display = 'block';
			document.getElementById('btn' + tabId.charAt(0).toUpperCase() + tabId.slice(1)).classList.add('active');
		}

		// Kích hoạt tab dựa trên giá trị của ViewBag.CurrentTab
		window.onload = function () {
			var currentTab = '@ViewBag.CurrentTab';
			if (currentTab) {
				showTab(currentTab);
			} else {
				showTab('pendingPosts'); // Mặc định mở tab pendingPosts nếu currentTab không được đặt
			}
		};
		function confirmApprove() {
			return confirm("Bạn có muốn duyệt bài này không?");
		}
		function confirmApproveAgain() {
			return confirm("Bạn có muốn duyệt lại bài này không?");
		}
		function confirmDelete() {
			if (confirm("Bạn có chắc chắn muốn xóa bài đăng này?")) {
				return true; // Người dùng đã xác nhận muốn xóa
			} else {
				return false; // Người dùng đã hủy bỏ xóa
			}
		}
	</script>
}