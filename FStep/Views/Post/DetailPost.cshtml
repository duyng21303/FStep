@using FStep.Data
@using FStep.ViewModels
@model FStep.Data.Post

@{
	var user = ViewData["USER_CREATE"] as FStep.Data.User;
	var comments = ViewData["comments"] as List<CommentVM> ?? new List<CommentVM>();
	var recommendedPosts = ViewData["recommendedPosts"] as List<Post> ?? new List<Post>();
	var commentError = TempData["CommentError"] as string;
	var commentNote = new FStep.ViewModels.Summernote("#commentNote", isLoadScript: false);
}

<body>
    <div class="container-detail">
        <!-- Left Column / Image -->
        <div class="left-column">
            <img src="~/img/postPic/@Model.Img" alt="Project Image">
        </div>

        <!-- Right Column -->
        <div class="right-column">
            <!-- Product Description -->
            <div class="product-description">
                <span>@Model.Type</span>
                <h1>@Model.Content</h1>
                <div class="text">@Html.Raw(Model.Detail)</div>
                <a class="read-more" href="javascript:void(0)">Xem thêm</a>
                <a class="shrink-btn" href="javascript:void(0)">Thu gọn</a>
            </div>

            <!-- Product Pricing -->
        </div>
    </div>

    <div class="container">
        <div class="col-md-12">
            <div class="card b-1 hover-shadow mb-20 full-width">
                <div class="media card-body">
                    <div class="media-left pr-12">
                        <div class="img">
                            @if (user.AvatarImg != null)
                            {
                                <img class="avatar avatar-xl no-radius" src="~/img/userAvar/@user.AvatarImg" alt="...">
                            }
                            else
                            {
                                <img class="avatar avatar-xl no-radius" src="~/img/nullAvar/149071.png" alt="...">
                            }
                        </div>
                        <div class="name">
                            <div class="mb-2">
                                <span class="fs-20 pr-16">@user.Name</span>
                            </div>

                            @if (User.Identity.IsAuthenticated)
                            {
                                @if (!User.Claims.FirstOrDefault(c => c.Type == "UserID").Value.Equals(Model.IdUser))
                                {
                                    <button type="button" class="btn btn-sm btn-primary load-chat" data-userid="@Model.IdUser" data-post="@Model.IdPost">
                                        <span>Chat ngay</span>
                                    </button>
                                }
                                <div id="chatContainerRaw" style="display: block;">
                                    @await Component.InvokeAsync("Chat")
                                </div>
                                <div id="chatContainer" style="display: none;">
                                    @await Component.InvokeAsync("Chat", Model.IdUser)
                                </div>
                            }
                        </div>
                    </div>

                    <div class="media-right text-right d-none d-md-block">
                        <p class="fs-14 text-fade mb-12">Đánh giá: @user.PointRating</p>
                        <span class="text-fade"><i class="fa fa-money pr-1"></i>@Model.Date</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Recommended Posts -->
    @if (recommendedPosts.Count > 0)
    {
        <div class="col-lg-12 mt-3">
            <h3 class="page-header">Recommended Posts</h3>
            <div class="row">
                @foreach (var post in recommendedPosts)
                {
                    <div class="col-lg-4 col-md-6 col-sm-12">
                        <div class="card b-1 hover-shadow">
                            <div class="media card-body">
                                <div class="media-left pr-12">
                                    <div class="img">
                                        <img class="avatar avatar-xl no-radius" src="~/img/postPic/@post.Img" alt="...">
                                    </div>
                                </div>
                                <div class="media-body">
                                    <div>
                                        <span class="fs-20 pr-16">@post.Content</span>
                                    </div>
                                    <div class="fs-14 text-fade">
                                        <span>Post Date: @post.Date</span>
                                    </div>
                                    <div class="fs-14 text-fade">
                                        <span>Type: @post.Type</span>
                                    </div>
                                    <div class="fs-14 text-fade">
										<span>Rating: @post.IdUserNavigation.PointRating</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }

    <!-- Comment Section -->
    <div class="col-lg-12 mt-3">
        <div class="tab-class">
            <div class="row g-4">
                <div class="col-lg-8 text-end">
                    <ul class="nav nav-pills d-inline-flex text-center mb-5">
						@if (!User.Claims.FirstOrDefault(c => c.Type == "UserID").Value.Equals(Model.IdUser))
						{

                        <li class="nav-item">
                            <a class="d-flex m-2 py-2 bg-light rounded-pill active" data-bs-toggle="pill" href="#tab-comment" style="width: 130px; text-decoration: none">
                                <span class="text-dark" style="width: 130px;">Bình luận</span>
                            </a>
                        </li>
						<li class="nav-item">
                            <a class="d-flex py-2 m-2 bg-light rounded-pill" data-bs-toggle="pill" href="#tab-comment-image" style="width: 130px; text-decoration: none">
                                <span class="text-dark" style="width: 130px;">Tôi muốn trao đổi</span>
                            </a>
                        </li>
						}

                    </ul>
                </div>
            </div>
            <div class="tab-content">
                <!-- Tab bình luận thông thường -->
                <div id="tab-comment" class="tab-pane fade show p-0 active">
                    <div class="inner-column wow fadeInRight card" style="padding: 5px; box-shadow: 0 3px 10px rgb(0 0 0 / 0.2);">
                        <span class="lead">Bình luận</span>
                        <form method="post" asp-action="PostComment" asp-controller="Post">
                            <div>
                                <input name="IdPost" value="@Model.IdPost" type="hidden" />
                                <input name="RedirectUrl" value="DetailPost" type="hidden" />
                                <textarea rows="3" class="form-control" name="Content"></textarea>
                            </div>
                            <div style="min-height:10px;"></div>
                            <div>
                                <button class="btn btn-danger" name="btn-comment">Bình luận</button>
                            </div>
                        </form>
                    </div>
                </div>
                <!-- Tab bình luận với hình ảnh -->
                <div id="tab-comment-image" class="tab-pane fade show p-0">
                    <div class="inner-column wow fadeInRight card" style="padding: 5px; box-shadow: 0 3px 10px rgb(0 0 0 / 0.2);">
                        <span class="lead">Sản phẩm trao đổi</span>
                        <form method="post" asp-action="PostCommentExchange" asp-controller="Post" enctype="multipart/form-data">
                            <div>
                                <input name="IdPost" value="@Model.IdPost" type="hidden" />
                                <input name="RedirectUrl" value="DetailPost" type="hidden" />
                                <textarea rows="3" class="form-control" name="Content"></textarea>
                            </div>
                            <div style="min-height:10px;"></div>
                            <div>
                                <div class="form-item">
                                    <label class="form-label my-3">Thêm hình ảnh</label><sup>*</sup>
                                    <input type="file" name="img" class="form-control">
                                    <input type="hidden" asp-for="@Model.Type" value="Exchange" />
                                </div>
                            </div>
                            <div style="min-height:10px;"></div>
                            <div>
                                <button class="btn btn-danger" name="btn-comment">Đăng</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="container bootstrap snippets bootdey">
            <div class="row">
                <div class="col-md-12">
                    <div class="blog-comment">
                        <hr />
                        <ul class="comments">
                            @foreach (var comment in comments.OrderByDescending(c => c.Date))
                            {
                                <li class="clearfix" style="display: flex;">
                                    @if (comment.avarImg != null)
                                    {
                                        <img class="rounded-circle me-lg-2 product-rating__avatar-img" src="~/img/userAvar/@comment.avarImg" alt="" style="width: 40px; height: 40px;">
                                    }
                                    else
                                    {
                                        <img class="rounded-circle me-lg-2 product-rating__avatar-img" src="~/img/nullAvar/149071.png" alt="" style="width: 40px; height: 40px;">
                                    }
                                    <div class="post-comments">
                                        <p class="meta">
                                            <a href="#">@comment.Name</a> <small>@comment.Date?.ToString("dd-MM-yyyy HH:mm:ss")</small>
                                            @if (User.Identity.IsAuthenticated)
                                            {
                                                @if (comment.Type == "Exchange" && User.Claims.FirstOrDefault(c => c.Type == "UserID").Value.Equals(Model.IdUser))
                                                {
													<span class="labelConfirm exchange">Trao đổi</span>
													@if (!User.Claims.FirstOrDefault(c => c.Type == "UserID").Value.Equals(comment.IdUser))
													{
													<button type="button"

															class="btn btn-sm btn-primary load-chat-comment-exchange" style="float: inline-end" data-userid="@comment.IdUser" data-post="@comment.IdPost" data-comment="@comment.IdComment">
														<span>Liên hệ để trao đổi ngay</span>
													</button>
													}
												}
												else
												{
													@if (!User.Claims.FirstOrDefault(c => c.Type == "UserID").Value.Equals(comment.IdUser))
													{
													<button type="button" class="btn btn-sm btn-primary load-chat-comment" style="float: inline-end" data-userid="@comment.IdUser">
														<span>Liên hệ với người này</span>
													</button>
														}
												}
												<div id="chatContainerComment" style="display: none;">
													@await Component.InvokeAsync("Chat", @comment.IdUser)
												</div>
											}
										</p>
										<p style="word-wrap: break-word;">
											@comment.Content
										</p>
										@if (comment.Type == "Exchange")
										{
											<div class="fixed-image-container" style="margin-left: 64px; padding-bottom: 10px;">
												<img src="~/img/postPic/@comment.Img" alt="Fixed Image" style="width: auto; height: 300px; display: flex;">
											</div>
										}
									</div>
								</li>
							}
						</ul>
					</div>
				</div>
			</div>
		</div>
	</div>
	<script src="~/js/site.js"></script>
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			var productDescription = document.querySelector('.product-description');
			var textContainer = productDescription.querySelector('.text');
			var readMoreLink = productDescription.querySelector('.read-more');
			var shrinkButton = productDescription.querySelector('.shrink-btn');

			// Check if content overflows
			if (textContainer.scrollHeight > textContainer.clientHeight) {
				readMoreLink.style.display = 'inline-block'; // Show "Read more" link if content overflows
				shrinkButton.style.display = 'none'; // Hide "Collapse" button initially

				readMoreLink.addEventListener('click', function () {
					textContainer.style.maxHeight = 'none'; // Expand content
					readMoreLink.style.display = 'none'; // Hide "Read more" link
					shrinkButton.style.display = 'inline-block'; // Show "Collapse" button
				});

				shrinkButton.addEventListener('click', function () {
					textContainer.style.maxHeight = '100px'; // Collapse content to initial height
					readMoreLink.style.display = 'inline-block'; // Show "Read more" link
					shrinkButton.style.display = 'none'; // Hide "Collapse" button
				});
			} else {
				readMoreLink.style.display = 'none'; // Hide "Read more" link if content does not overflow
			}
		});
	</script>

</body>
