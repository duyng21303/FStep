@using FStep.Data
@using FStep.ViewModels
@model FStep.Data.Post

@{
	var user = ViewData["USER_CREATE"] as FStep.Data.User;
	var comments = ViewData["comments"] as List<CommentVM> ?? new List<CommentVM>();
	var recommendedPosts = ViewData["recommendedPosts"] as List<Post> ?? new List<Post>();
	var commentError = TempData["CommentError"] as string;
}
<link rel="stylesheet" href="https://unpkg.com/viewerjs/dist/viewer.css" crossorigin="anonymous">
<style>
	html,
	body {
		height: 100%;
		width: 100%;
		margin: 0;
		font-family: 'Roboto', sans-serif;
	}

	.container-detail {
		max-width: 1200px;
		margin: 0 auto;
		padding: 15px;
		display: flex;
		flex-wrap: wrap;
	}

	/* Columns */
	.left-column {
		width: 65%;
		position: relative;
		overflow: auto;
		/* Thêm overflow để có thanh cuộn */
		height: 400px;
		/* Chiều cao cố định */
		max-width: 400px;
		/* Chiều rộng cố định */
		text-align: left;
		/* Đưa thanh cuộn sang trái */
		white-space: nowrap;
	}

	.right-column {
		width: 35%;
		margin-top: 60px;
		margin-left: 120px;
	}

	.left-column img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		/* Bao phủ vùng chứa mà không bị méo */
		border-radius: 25px;
	}

	/* Product Description */
	.product-description {
		border-bottom: 1px solid #E1E8EE;
		margin-bottom: 20px;
	}

		.product-description span {
			font-size: 12px;
			color: #358ED7;
			letter-spacing: 1px;
			text-transform: uppercase;
			text-decoration: none;
		}

		.product-description h1 {
			font-weight: 300;
			font-size: 52px;
			color: #43484D;
			letter-spacing: -2px;
		}

		.product-description p {
			font-size: 16px;
			font-weight: 300;
			color: #86939E;
			line-height: 24px;
		}

	/* Product Price */
	.product-price {
		display: flex;
		align-items: center;
	}

		.product-price span {
			font-size: 26px;
			font-weight: 300;
			color: #43474D;
			margin-right: 20px;
		}

	.cart-btn {
		display: inline-block;
		background-color: #7DC855;
		border-radius: 6px;
		font-size: 16px;
		color: #FFFFFF;
		text-decoration: none;
		padding: 12px 30px;
		transition: all .5s;
	}

		.cart-btn:hover {
			background-color: #64af3d;
		}

	.mt-2 {
		margin-top: 20px;
	}

	.col-lg-12 {
		width: 100%;
	}

	.inner-column {
		padding: 20px;
		box-shadow: 0 3px 10px rgb(0 0 0 / 0.2);
		background-color: #fff;
		border-radius: 10px;
	}

	.lead {
		font-size: 20px;
		font-weight: bold;
	}

	textarea.form-control {
		width: 100%;
		padding: 10px;
		border-radius: 6px;
		border: 1px solid #ccc;
	}

	.btn-danger {
		background-color: #ff0000;
		border: none;
		padding: 10px 20px;
		color: #fff;
		border-radius: 6px;
		cursor: pointer;
	}

		.btn-danger:hover {
			background-color: #da0606;
		}

	.text {
		max-height: 100px;
		/* Hoặc bất kỳ giới hạn chiều cao nào bạn muốn hiển thị ban đầu */
		overflow: hidden;
		transition: max-height 0.5s ease;
		/* Để tạo hiệu ứng mượt mà */
	}


	.product-description .read-more,
	.product-description .shrink-btn {
		display: none;
		/* Ẩn liên kết "Xem thêm" và "Thu gọn" ban đầu */
		text-decoration: none;
	}

	body {
		background: #FCFCFC;
	}

	.pr-12 {
		padding-right: 12px !important;
	}

	.mb-20 {
		margin-bottom: 20px !important;
	}

	.b-1 {
		border: 1px solid #ebebeb !important;
	}

	.card {
		position: relative;
		display: flex;
		flex-direction: column;
		min-width: 0;
		word-wrap: break-word;
		background-color: #fff;
		background-clip: border-box;
		border: 1px solid rgba(0, 0, 0, .125);
		border-radius: .25rem;
		border: 0;
		margin-bottom: 30px;
		transition: .5s;
		width: 100% !important;
		/* Ensure full width */
	}

	.media {
		padding: 16px 12px;
		-webkit-transition: background-color .2s linear;
		transition: background-color .2s linear;
	}

	.media {
		display: -ms-flexbox;
		display: flex;
		-ms-flex-align: start;
		align-items: center;
		flex-direction: row;
		justify-content: space-between;
	}

	.card-body {
		-ms-flex: 1 1 auto;
		flex: 1 1 auto;
		padding: 1.25rem;
	}

	.media .avatar {
		flex-shrink: 0;
		width: 70px;
		height: 70px;
	}

	.no-radius {
		border-radius: 0 !important;
	}

	.avatar-xl {
		width: 64px;
		height: 64px;
		line-height: 64px;
		font-size: 1.25rem;
	}

	.avatar {
		position: relative;
		display: inline-block;
		width: 36px;
		height: 36px;
		line-height: 36px;
		text-align: center;
		border-radius: 100%;
		background-color: #f5f6f7;
		color: #8b95a5;
		text-transform: uppercase;
	}

	img {
		max-width: 100%;
	}

	img {
		vertical-align: middle;
		border-style: none;
	}

	.mb-2 {
		margin-bottom: .5rem !important;
	}

	.fs-20 {
		font-size: 20px !important;
	}

	.pr-16 {
		padding-right: 16px !important;
	}

	.ls-1 {
		letter-spacing: 1px !important;
	}

	.fw-300 {
		font-weight: 300 !important;
	}

	.fs-16 {
		font-size: 16px !important;
	}

	.media-body > * {
		margin-bottom: 0;
	}

	small,
	time,
	.small {
		font-family: Roboto, sans-serif;
		font-weight: 400;
		font-size: 11px;
		color: #8b95a5;
	}

	.fs-14 {
		font-size: 14px !important;
	}

	.mb-12 {
		margin-bottom: 12px !important;
	}

	.text-fade {
		color: rgba(77, 82, 89, 0.7) !important;
	}

	.card-footer:last-child {
		border-radius: 0 0 calc(.25rem - 1px) calc(.25rem - 1px);
	}

	.card-footer {
		background-color: #fcfdfe;
		border-top: 1px solid rgba(77, 82, 89, 0.07);
		color: #8b95a5;
		padding: 10px 20px;
	}

	.flexbox {
		display: -webkit-box;
		display: flex;
		-webkit-box-pack: justify;
		justify-content: space-between;
	}

	.align-items-center {
		-ms-flex-align: center !important;
		align-items: center !important;
	}

	.card-footer {
		padding: .75rem 1.25rem;
		background-color: rgba(0, 0, 0, .03);
		border-top: 1px solid rgba(0, 0, 0, .125);
	}


	.card-footer {
		background-color: #fcfdfe;
		border-top: 1px solid rgba(77, 82, 89, 0.07);
		color: #8b95a5;
		padding: 10px 20px
	}

		.card-footer > *:last-child {
			margin-bottom: 0
		}

	.hover-shadow {
		-webkit-box-shadow: 0 0 35px rgba(0, 0, 0, 0.11);
		box-shadow: 0 0 35px rgba(0, 0, 0, 0.11)
	}

	.fs-10 {
		font-size: 10px !important;
	}

	.media-left {
		display: flex;
	}

		.media-left .img {
		}

		.media-left .name {
			margin-left: 12px;
		}

	.product-rating__author-name,
	.product-rating__time {
		font-size: .75rem;
	}

	.product-rating {
		background-color: var(--bs-body-bg);
	}

	.blog-comment::before,
	.blog-comment::after,
	.blog-comment-form::before,
	.blog-comment-form::after {
		content: "";
		display: table;
		clear: both;
	}

	.blog-comment {
		padding-left: 8%;
		padding-right: 5%;
	}

		.blog-comment ul {
			list-style-type: none;
			padding: 0;
		}

		.blog-comment img {
			opacity: 1;
			filter: Alpha(opacity=100);
			-webkit-border-radius: 4px;
			-moz-border-radius: 4px;
			-o-border-radius: 4px;
			border-radius: 4px;
		}

			.blog-comment img.avatar {
				position: relative;
				float: left;
				margin-left: 0;
				margin-top: 0;
				width: 65px;
				height: 65px;
			}

		.blog-comment .post-comments {
			width: 1000px;
			border: 1px solid #eee;
			margin-bottom: 20px;
			margin-left: 16px;
			margin-right: 6px;
			padding: 6px 17px;
			position: relative;
			-webkit-border-radius: 4px;
			-moz-border-radius: 4px;
			-o-border-radius: 4px;
			border-radius: 4px;
			background: #f5f9fc;
			color: #6b6e80;
			position: relative;
		}

		.blog-comment .meta {
			font-size: 13px;
			color: #aaaaaa;
			padding-bottom: 17px;
			margin-bottom: 10px !important;
			border-bottom: 1px solid #ccc;
		}

		.blog-comment ul.comments ul {
			list-style-type: none;
			padding: 0;
			margin-left: 85px;
		}

	.blog-comment-form {
		padding-left: 15%;
		padding-right: 15%;
		padding-top: 40px;
	}

		.blog-comment h3,
		.blog-comment-form h3 {
			margin-bottom: 40px;
			font-size: 26px;
			line-height: 30px;
			font-weight: 800;
		}
</style>
<style>
	.three-dot-180 {
		display: inline-block;
		width: 180px;
		white-space: nowrap;
		overflow: hidden !important;
		text-overflow: ellipsis;
	}
</style>

<body>
    <div class="container-detail">
        <!-- Left Column / Image -->
        <div class="left-column">
            <img id="preview-detail-image" src="~/img/postPic/@Model.Img" alt="Project Image" style="cursor: zoom-in">
        </div>

        <!-- Right Column -->
        <div class="right-column">
            <!-- Product Description -->
            <div class="product-description">
                <span>@Model.Type</span>
                <h1>@Model.Content</h1>
                <div class="text">@Html.Raw(Model.Detail)</div>
                <a class="read-more" href="javascript:void(0)">Xem thêm</a>
                <a class="shrink-btn" href="javascript:void(0)">Thu gọn</a>
            </div>

            <!-- Product Pricing -->
        </div>
    </div>

    <div class="container">
        <div class="col-md-12">
            <div class="card b-1	hover-shadow mb-20 full-width">
                <div class="media card-body">
                    <div class="media-left pr-12">
                        <div class="img">
							<a asp-action="Detail" asp-route-id="@user.IdUser" asp-controller="User">
							    @if (user.AvatarImg != null)
								{
									<img class="avatar avatar-xl no-radius" src="~/img/userAvar/@user.AvatarImg" alt="...">
								}
								else
								{
									<img class="avatar avatar-xl no-radius" src="~/img/nullAvar/149071.png" alt="...">
								}
						   </a>
                        </div>
                        <div class="name">
                            <div class="mb-2">
								<a asp-action="Detail" asp-route-id="@user.IdUser" asp-controller="User">
									<span class="fs-20 pr-16">@user.Name</span>
								</a>
                            </div>

                            @if (User.Identity.IsAuthenticated)
                            {
                                @if (!User.Claims.FirstOrDefault(c => c.Type == "UserID").Value.Equals(Model.IdUser))
                                {
                                    <button type="button" class="btn btn-sm btn-primary load-chat" data-userid="@Model.IdUser" data-post="@Model.IdPost">
                                        <span>Chat ngay</span>
                                    </button>
                                }
                                <div id="chatContainerRaw" style="display: block;">
                                    @await Component.InvokeAsync("Chat")
                                </div>
                                <div id="chatContainer" style="display: none;">
                                    @await Component.InvokeAsync("Chat", Model.IdUser)
                                </div>
                            }
                        </div>
                    </div>

                    <div class="media-right text-right d-none d-md-block">
                        <p class="fs-14 text-fade mb-12">Đánh giá: @user.PointRating</p>
                        <span class="text-fade"><i class="fa fa-money pr-1"></i>@Model.Date</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Recommended Posts -->
    @if (recommendedPosts.Count > 0)
    {
        <div class="col-lg-12 mt-3">
            <h3 class="page-header">Recommended Posts</h3>
            <div class="row">
                @foreach (var post in recommendedPosts)
                {
                    <div class="col-lg-4 col-md-6 col-sm-12">
                        <div class="card b-1 hover-shadow">
                            <div class="media card-body">
                                <div class="media-left pr-12">
                                    <div class="img">
                                        <img class="avatar avatar-xl no-radius" src="~/img/postPic/@post.Img" alt="...">
                                    </div>
                                </div>
                                <div class="media-body">
                                    <div>
										<span class="fs-20 pr-16 three-dot-180">@post.Content</span>
                                    </div>
                                    <div class="fs-14 text-fade">
                                        <span>Post Date: @post.Date</span>
                                    </div>
                                    <div class="fs-14 text-fade">
                                        <span>Type: @post.Type</span>
                                    </div>
                                    <div class="fs-14 text-fade">
                                        <span>Rating: @post.IdUserNavigation.PointRating</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }

    <!-- Comment Section -->
    <div class="col-lg-12 mt-3">
        <div class="tab-class">
            <div class="row g-4">
                <div class="col-lg-8 text-end">
                    <ul class="nav nav-pills d-inline-flex text-center mb-5">
						@if (User.Identity.IsAuthenticated && !User.Claims.FirstOrDefault(c => c.Type == "UserID").Value.Equals(Model.IdUser))
						{

                        <li class="nav-item">
                            <a class="d-flex m-2 py-2 bg-light rounded-pill active" data-bs-toggle="pill" href="#tab-comment" style="width: 130px; text-decoration: none">
                                <span class="text-dark" style="width: 130px;">Bình luận</span>
                            </a>
                        </li>
						<li class="nav-item">
                            <a class="d-flex py-2 m-2 bg-light rounded-pill" data-bs-toggle="pill" href="#tab-comment-image" style="width: 130px; text-decoration: none">
                                <span class="text-dark" style="width: 130px;">Tôi muốn trao đổi</span>
                            </a>
                        </li>
						}

                    </ul>
                </div>
            </div>
            <div class="tab-content">
                <!-- Tab bình luận thông thường -->
                <div id="tab-comment" class="tab-pane fade show p-0 active">
                    <div class="inner-column wow fadeInRight card" style="padding: 5px; box-shadow: 0 3px 10px rgb(0 0 0 / 0.2);">
                        <span class="lead">Bình luận</span>
                        <form method="post" asp-action="PostComment" asp-controller="Post">
                            <div>
                                <input name="IdPost" value="@Model.IdPost" type="hidden" />
                                <input name="RedirectUrl" value="DetailPost" type="hidden" />
                                <textarea rows="3" class="form-control" name="Content"></textarea>
                            </div>
                            <div style="min-height:10px;"></div>
                            <div>
                                <button class="btn btn-danger" name="btn-comment">Bình luận</button>
                            </div>
                        </form>
                    </div>
                </div>
                <!-- Tab bình luận với hình ảnh -->
                <div id="tab-comment-image" class="tab-pane fade show p-0">
                    <div class="inner-column wow fadeInRight card" style="padding: 5px; box-shadow: 0 3px 10px rgb(0 0 0 / 0.2);">
                        <span class="lead">Sản phẩm trao đổi</span>
                        <form method="post" asp-action="PostCommentExchange" asp-controller="Post" enctype="multipart/form-data">
                            <div>
                                <input name="IdPost" value="@Model.IdPost" type="hidden" />
                                <input name="RedirectUrl" value="DetailPost" type="hidden" />
                                <textarea rows="3" class="form-control" name="Content"></textarea>
                            </div>
                            <div style="min-height:10px;"></div>
                            <div>
                                <div class="form-item">
                                    <label class="form-label my-3">Thêm hình ảnh</label><sup>*</sup>
                                    <input type="file" name="img" class="form-control">
                                    <input type="hidden" asp-for="@Model.Type" value="Exchange" />
                                </div>
                            </div>
                            <div style="min-height:10px;"></div>
                            <div>
                                <button class="btn btn-danger" name="btn-comment">Đăng</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="container bootstrap snippets bootdey">
            <div class="row">
                <div class="col-md-12">
                    <div class="blog-comment">
                        <hr />
                        <ul class="comments">
                            @foreach (var comment in comments.OrderByDescending(c => c.Date))
                            {
                                <li class="clearfix" style="display: flex;">
                                    @if (comment.avarImg != null)
                                    {
                                        <img class="rounded-circle me-lg-2 product-rating__avatar-img" src="~/img/userAvar/@comment.avarImg" alt="" style="width: 40px; height: 40px;">
                                    }
                                    else
                                    {
                                        <img class="rounded-circle me-lg-2 product-rating__avatar-img" src="~/img/nullAvar/149071.png" alt="" style="width: 40px; height: 40px;">
                                    }
                                    <div class="post-comments">
                                        <p class="meta">
                                            <a href="#">@comment.Name</a> <small>@comment.Date?.ToString("dd-MM-yyyy HH:mm:ss")</small>
                                            @if (User.Identity.IsAuthenticated)
                                            {
												@if (!User.Claims.FirstOrDefault(c => c.Type == "UserID").Value.Equals(comment.IdUser))
												{
													<button type="button" data-bs-toggle="modal" data-bs-target="#reportComment" class="btn btn-sm btn-danger btn-report" style="float: inline-end;margin-left: 4px;" data-userid="@comment.IdUser" data-post="@comment.IdPost" data-comment="@comment.IdComment">
														Báo cáo
													</button>
												}
												@if (comment.Type == "Exchange" && User.Claims.FirstOrDefault(c => c.Type == "UserID").Value.Equals(Model.IdUser))
                                                {
													<span class="labelConfirm exchange">Trao đổi</span>
													@if (!User.Claims.FirstOrDefault(c => c.Type == "UserID").Value.Equals(comment.IdUser))
													{
														<button type="button" class="btn btn-sm btn-primary load-chat-comment-exchange" style="float: inline-end" data-userid="@comment.IdUser" data-post="@comment.IdPost" data-comment="@comment.IdComment">
															<span>Liên hệ để trao đổi ngay</span>
														</button>
													}
												}
												else
												{
													@if (!User.Claims.FirstOrDefault(c => c.Type == "UserID").Value.Equals(comment.IdUser))
													{
														<button type="button" class="btn btn-sm btn-primary load-chat-comment" style="float: inline-end" data-userid="@comment.IdUser">
															<span>Liên hệ với người này</span>
														</button>
													}
												}
												<div id="chatContainerComment" style="display: none;">
													@await Component.InvokeAsync("Chat", @comment.IdUser)
												</div>
											}
										</p>
										<p style="word-wrap: break-word;">
											@comment.Content
										</p>
										@if (comment.Type == "Exchange")
										{
											<div class="fixed-image-container" style="margin-left: 64px; padding-bottom: 10px;">
												<img src="~/img/postPic/@comment.Img" alt="Fixed Image" style="width: auto; height: 300px; display: flex;">
											</div>
										}
									</div>
								</li>
							}
						</ul>
					</div>
				</div>
			</div>
		</div>
		<div class="modal fade" id="reportComment" tabindex="-1" aria-labelledby="reportCommentLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="reportCommentLabel">Báo cáo bình luận</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<form id="reportForm">
							<div class="mb-3">
								<label for="message-text" class="col-form-label">Lý do:</label>
								<div class="form-check">
									<input class="form-check-input" type="radio" name="reportReason" id="reason1" value="Đánh giá thô tục phản cảm">
									<label class="form-check-label" for="reason1">
										Đánh giá thô tục phản cảm
									</label>
								</div>
								<div class="form-check">
									<input class="form-check-input" type="radio" name="reportReason" id="reason2" value="Chứa hình ảnh phản cảm, khỏa thân, khiêu dâm">
									<label class="form-check-label" for="reason2">
										Chứa hình ảnh phản cảm, khỏa thân, khiêu dâm
									</label>
								</div>
								<div class="form-check">
									<input class="form-check-input" type="radio" name="reportReason" id="reason3" value="Đánh giá trùng lặp (thông tin rác)">
									<label class="form-check-label" for="reason3">
										Đánh giá trùng lặp (thông tin rác)
									</label>
								</div>
								<div class="form-check">
									<input class="form-check-input" type="radio" name="reportReason" id="reason4" value="Chứa thông tin cá nhân">
									<label class="form-check-label" for="reason4">
										Chứa thông tin cá nhân
									</label>
								</div>
								<div class="form-check">
									<input class="form-check-input" type="radio" name="reportReason" id="reason5" value="Đánh giá không chính xác / gây hiểu lầm">
									<label class="form-check-label" for="reason5">
										Đánh giá không chính xác / gây hiểu lầm
									</label>
								</div>
								<div class="form-check">
									<input class="form-check-input" type="radio" name="reportReason" id="reason6" value="Vi phạm khác">
									<label class="form-check-label" for="reason6">
										Vi phạm khác
									</label>
								</div>
								<textarea class="form-control mt-3 d-none" id="message-text" placeholder="Vui lòng mô tả chi tiết vi phạm (bắt buộc)"></textarea>
							</div>
						</form>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
						<button type="button" class="btn btn-primary" id="sendReportButton">Gửi báo cáo</button>
					</div>
				</div>
			</div>
		</div>
	</div>
	<script src="~/js/site.js"></script>
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			var productDescription = document.querySelector('.product-description');
			var textContainer = productDescription.querySelector('.text');
			var readMoreLink = productDescription.querySelector('.read-more');
			var shrinkButton = productDescription.querySelector('.shrink-btn');

			if (textContainer.scrollHeight > textContainer.clientHeight) {
				readMoreLink.style.display = 'inline-block'; // Show "Read more" link if content overflows
				shrinkButton.style.display = 'none'; // Hide "Collapse" button initially

				readMoreLink.addEventListener('click', function () {
					textContainer.style.maxHeight = 'none'; // Expand content
					readMoreLink.style.display = 'none'; // Hide "Read more" link
					shrinkButton.style.display = 'inline-block'; // Show "Collapse" button
				});

				shrinkButton.addEventListener('click', function () {
					textContainer.style.maxHeight = '100px'; // Collapse content to initial height
					readMoreLink.style.display = 'inline-block'; // Show "Read more" link
					shrinkButton.style.display = 'none'; // Hide "Collapse" button
				});
			} else {
				readMoreLink.style.display = 'none'; // Hide "Read more" link if content does not overflow
			}
		});

		$(document).ready(function () {
			$('#reportForm input[name="reportReason"]').change(function () {
				if ($('#reason6').is(':checked')) {
					$('#message-text').removeClass('d-none');
				} else {
					$('#message-text').addClass('d-none');
				}
			});

			$('.btn-report').click(function () {
				var postId = $(this).data('post');
				var commentId = $(this).data('comment');

				$('#reportForm').data('postid', postId);
				$('#reportForm').data('commentid', commentId);
			});

			$('#sendReportButton').click(function () {
				var reason = $('input[name="reportReason"]:checked').val();
				var additionalComments = $('#message-text').val();

				if (!reason) {
					alert("Vui lòng chọn vi phạm");
					return;
				}
				if ($('#reason6').is(':checked') && !additionalComments) {
					Swal.fire({
						icon: 'error',
						text: 'Vui lòng nhập mô tả chi tiết vi phạm',
						showConfirmButton: false,
					});
					return;
				} else if ($('#reason6').is(':checked')) {
					reason += `: ${additionalComments}`;
				}

				// Get the bound data
				var postId = $('#reportForm').data('postid');
				var commentId = $('#reportForm').data('commentid');
				var token = $('input[name="__RequestVerificationToken"]').val();

				var reportData = {
					idPost: postId,
					idComment: commentId,
					content: reason
				};

				fetch('/Post/ReportComment', {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
						'RequestVerificationToken': token
					},
					body: JSON.stringify(reportData)
				})
					.then(response => {
						if (!response.ok) {
							throw new Error('Network response was not ok');
						}
						return response.json();
					})
					.then(data => {
						Swal.fire({
							icon: 'success',
							title: 'Báo cáo đã được gửi!',
							text: 'Cảm ơn bạn đã báo cáo, chúng tôi sẽ xem xét bình luận này.',
							showConfirmButton: false,
						});
						$('#reportComment').modal('hide');
						$('#message-text').val('');
					})
					.catch(error => {
						Swal.fire({
							icon: 'error',
							text: 'Bạn đã báo cáo bình luận này',
							showConfirmButton: false,
						});
					});
			});
		});
	</script>

</body>
