@using FStep.Data
@using FStep.ViewModels
@model FStep.ViewModels.PostVM
@{
	var user = ViewData["USER_CREATE"] as FStep.Data.User;
	var comments = ViewData["comments"] as List<CommentVM> ?? new List<CommentVM>();
	var recommendedSales = ViewData["recommendedSales"] as List<Post> ?? new List<Post>();
	var format = System.Globalization.CultureInfo.GetCultureInfo("vi-VN");
	var commentError = TempData["CommentError"] as string;
}
<style>
	html,
	body {
		height: 100%;
		width: 100%;
		margin: 0;
		font-family: 'Roboto', sans-serif;
	}

	.container-detail {
		max-width: 1200px;
		margin: 0 auto;
		padding: 15px;
		display: flex;
		flex-wrap: wrap;
	}

	/* Columns */
	.left-column {
		width: 65%;
		position: relative;
		overflow: auto;
		/* Thêm overflow để có thanh cuộn */
		height: 400px;
		/* Chiều cao cố định */
		max-width: 400px;
		/* Chiều rộng cố định */
		text-align: left;
		/* Đưa thanh cuộn sang trái */
		white-space: nowrap;
	}

	.right-column {
		width: 35%;
		margin-top: 60px;
		margin-left: 120px;
	}

	.left-column img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		/* Bao phủ vùng chứa mà không bị méo */
		border-radius: 25px;
	}

	/* Product Description */
	.product-description {
		border-bottom: 1px solid #E1E8EE;
		margin-bottom: 20px;
	}

		.product-description span {
			font-size: 12px;
			color: #358ED7;
			letter-spacing: 1px;
			text-transform: uppercase;
			text-decoration: none;
		}

		.product-description h1 {
			font-weight: 300;
			font-size: 52px;
			color: #43484D;
			letter-spacing: -2px;
		}

		.product-description p {
			font-size: 16px;
			font-weight: 300;
			color: #86939E;
			line-height: 24px;
		}

	/* Product Price */
	.product-price {
		display: flex;
		align-items: center;
	}

		.product-price span {
			font-size: 26px;
			font-weight: 300;
			color: #43474D;
			margin-right: 20px;
		}

	.cart-btn {
		display: inline-block;
		background-color: #7DC855;
		border-radius: 6px;
		font-size: 16px;
		color: #FFFFFF;
		text-decoration: none;
		padding: 12px 30px;
		transition: all .5s;
	}

		.cart-btn:hover {
			background-color: #64af3d;
		}

	.mt-2 {
		margin-top: 20px;
	}

	.col-lg-12 {
		width: 100%;
	}

	.inner-column {
		padding: 20px;
		box-shadow: 0 3px 10px rgb(0 0 0 / 0.2);
		background-color: #fff;
		border-radius: 10px;
	}

	.lead {
		font-size: 20px;
		font-weight: bold;
	}

	textarea.form-control {
		width: 100%;
		padding: 10px;
		border-radius: 6px;
		border: 1px solid #ccc;
	}

	.btn-danger {
		background-color: #ff0000;
		border: none;
		padding: 10px 20px;
		color: #fff;
		border-radius: 6px;
		cursor: pointer;
	}

		.btn-danger:hover {
			background-color: #da0606;
		}

	.text {
		max-height: 100px;
		/* Hoặc bất kỳ giới hạn chiều cao nào bạn muốn hiển thị ban đầu */
		overflow: hidden;
		transition: max-height 0.5s ease;
		/* Để tạo hiệu ứng mượt mà */
	}


	.product-description .read-more,
	.product-description .shrink-btn {
		display: none;
		/* Ẩn liên kết "Xem thêm" và "Thu gọn" ban đầu */
		text-decoration: none;
	}

	body {
		background: #FCFCFC;
	}

	.pr-12 {
		padding-right: 12px !important;
	}

	.mb-20 {
		margin-bottom: 20px !important;
	}

	.b-1 {
		border: 1px solid #ebebeb !important;
	}

	.card {
		position: relative;
		display: flex;
		flex-direction: column;
		min-width: 0;
		word-wrap: break-word;
		background-color: #fff;
		background-clip: border-box;
		border: 1px solid rgba(0, 0, 0, .125);
		border-radius: .25rem;
		border: 0;
		margin-bottom: 30px;
		transition: .5s;
		width: 100% !important;
		/* Ensure full width */
	}

	.media {
		padding: 16px 12px;
		-webkit-transition: background-color .2s linear;
		transition: background-color .2s linear;
	}

	.media {
		display: -ms-flexbox;
		display: flex;
		-ms-flex-align: start;
		align-items: center;
		flex-direction: row;
		justify-content: space-between;
	}

	.card-body {
		-ms-flex: 1 1 auto;
		flex: 1 1 auto;
		padding: 1.25rem;
	}

	.media .avatar {
		flex-shrink: 0;
		width: 70px;
		height: 70px;
	}

	.no-radius {
		border-radius: 0 !important;
	}

	.avatar-xl {
		width: 64px;
		height: 64px;
		line-height: 64px;
		font-size: 1.25rem;
	}

	.avatar {
		position: relative;
		display: inline-block;
		width: 36px;
		height: 36px;
		line-height: 36px;
		text-align: center;
		border-radius: 100%;
		background-color: #f5f6f7;
		color: #8b95a5;
		text-transform: uppercase;
	}

	img {
		max-width: 100%;
	}

	img {
		vertical-align: middle;
		border-style: none;
	}

	.mb-2 {
		margin-bottom: .5rem !important;
	}

	.fs-20 {
		font-size: 20px !important;
	}

	.pr-16 {
		padding-right: 16px !important;
	}

	.ls-1 {
		letter-spacing: 1px !important;
	}

	.fw-300 {
		font-weight: 300 !important;
	}

	.fs-16 {
		font-size: 16px !important;
	}

	.media-body > * {
		margin-bottom: 0;
	}

	small,
	time,
	.small {
		font-family: Roboto, sans-serif;
		font-weight: 400;
		font-size: 11px;
		color: #8b95a5;
	}

	.fs-14 {
		font-size: 14px !important;
	}

	.mb-12 {
		margin-bottom: 12px !important;
	}

	.text-fade {
		color: rgba(77, 82, 89, 0.7) !important;
	}

	.card-footer:last-child {
		border-radius: 0 0 calc(.25rem - 1px) calc(.25rem - 1px);
	}

	.card-footer {
		background-color: #fcfdfe;
		border-top: 1px solid rgba(77, 82, 89, 0.07);
		color: #8b95a5;
		padding: 10px 20px;
	}

	.flexbox {
		display: -webkit-box;
		display: flex;
		-webkit-box-pack: justify;
		justify-content: space-between;
	}

	.align-items-center {
		-ms-flex-align: center !important;
		align-items: center !important;
	}

	.card-footer {
		padding: .75rem 1.25rem;
		background-color: rgba(0, 0, 0, .03);
		border-top: 1px solid rgba(0, 0, 0, .125);
	}


	.card-footer {
		background-color: #fcfdfe;
		border-top: 1px solid rgba(77, 82, 89, 0.07);
		color: #8b95a5;
		padding: 10px 20px
	}

		.card-footer > *:last-child {
			margin-bottom: 0
		}

	.hover-shadow {
		-webkit-box-shadow: 0 0 35px rgba(0, 0, 0, 0.11);
		box-shadow: 0 0 35px rgba(0, 0, 0, 0.11)
	}

	.fs-10 {
		font-size: 10px !important;
	}

	.media-left {
		display: flex;
	}

		.media-left .img {
		}

		.media-left .name {
			margin-left: 12px;
		}

	.product-rating__author-name,
	.product-rating__time {
		font-size: .75rem;
	}

	.product-rating {
		background-color: var(--bs-body-bg);
	}

	.swiper-slide {
		text-align: center;
		font-size: 18px;
		background: #fff;
		display: flex;
		justify-content: center;
		align-items: center;
	}
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />

<body>
	<div class="container-detail">
		<!-- Left Column / Image -->
		<div class="left-column">
			<img src="~/img/postPic/@Model.Img" alt="Project Image">
		</div>

		<!-- Right Column -->
		<div class="right-column">
			<!-- Product Description -->
			<div class="product-description">
				<span>@Model.Type</span>
				<h1>@Model.Title</h1>
				<div class="text">@Html.Raw(Model.Description)</div>
				<a class="read-more" href="javascript:void(0)">Xem thêm</a>
				<a class="shrink-btn" href="javascript:void(0)">Thu gọn</a>
			</div>
			@* <div class="row">
			<div class="mb-3 text-muted small">
			<span>
			5.0 <span class="text-danger">
			<i class="fa fa-star"></i>
			<i class="fa fa-star"></i>
			<i class="fa fa-star"></i>
			<i class="fa fa-star"></i>
			<i class="fa fa-star"></i>
			</span>
			</span>
			<span class="text-primary p-2"> | </span>
			<span>@Model.FeedbackNum <span>Đánh giá</span></span>
			<span class="text-primary p-2"> | </span>
			<span>@Model.SoldQuantity <span>Đã bán</span><br /></span>
			</div>
			</div> *@
			<!-- Product Pricing -->
			<div class="product-price">
				<span>@String.Format(format, "{0:0,0 VND}", Model.Price)</span>
				@* <a href="#" class="cart-btn">Mua ngay</a> *@
			</div>
			<form method="get" asp-action="CheckoutSale" asp-controller="Pay" asp-route-id="@Model.IdPost">
				<div style="min-height:10px;"></div>
				<div class="d-flex mt-1">
					<div class="text align-content-lg-center mx-3">Số lượng</div>
					<input name="quantity" class="form-control text-center" id="inputQuantity" value="@Model.Quantity" disabled style="max-width: 7.5rem; " />
				</div>
				<div style="min-height:10px;"></div>
				@if (!User.Claims.FirstOrDefault(c => c.Type == "UserID").Value.Equals(Model.IdUser) && Model.Quantity != 0)
				{
					<button type="submit" class="btn btn-outline-secondary text-bg-primary">
						<div class="mx-4 text-white">Mua ngay</div>
					</button>
				}
				else
				{
					<button disabled class="btn btn-sm mt-2 bg-dark text-light bg-opacity-50">Mua ngay</button>
					
				}

			</form>
		</div>
	</div>
	<div class="container">
		<div class="col-md-12">
			<div class="card b-1 hover-shadow mb-20 full-width">
				<div class="media card-body">
					<div class="media-left pr-12">
						<div class="img">
							@if (user.AvatarImg != null)
							{
								<img class="avatar avatar-xl no-radius" src="~/img/userAvar/@user.AvatarImg" alt="...">
							}
							else
							{
								<img class="avatar avatar-xl no-radius" src="~/img/nullAvar/149071.png" alt="...">
							}
						</div>
						<div class="name">
							<div class="mb-2">
								<span class="fs-20 pr-16">@user.Name</span>
							</div>

							@if (User.Identity.IsAuthenticated)
							{
								@if (!User.Claims.FirstOrDefault(c => c.Type == "UserID").Value.Equals(Model.IdUser))
								{
									<button type="button" class="btn btn-sm btn-primary load-chat" data-userid="@Model.IdUser" data-post="@Model.IdPost">
										<span>Chat ngay</span>
									</button>
								}
								<div id="chatContainerRaw" style="display: block;">
									@await Component.InvokeAsync("Chat")
								</div>
								<div id="chatContainer" style="display: none;">
									@await Component.InvokeAsync("Chat", Model.IdUser)
								</div>
							}
						</div>
					</div>

					<div class="media-right text-right d-none d-md-block">
						<p class="fs-14 text-fade mb-12">Đánh giá: @user.Rating</p>
						<span class="text-fade"><i class="fa fa-money pr-1"></i>@Model.CreateDate</span>
					</div>
				</div>
			</div>
		</div>
	</div>
	<!-- Chat Button -->
	<div class="mt-2 btn border-secondary text-uppercase text-primary"
		 style="background-color: gray; text-align: center;">
		Chat
	</div>
	<style>
		.recommend-post {
			height: 300px !important;
			width: 300px !important;
		}

		.recommend-post-body {
		}

		.recommend-post-content {
			display: inline-block;
			width: 250px;
			white-space: nowrap;
			overflow: hidden !important;
			text-overflow: ellipsis;
		}
	</style>
	<!-- Recommended Posts -->
	@if (recommendedSales.Count > 0)
	{
		<div class="col-lg-12 mt-3">
			<h3 class="page-header">Recommended Sales</h3>
			<div class="swiper">
				@* col-lg-4 col-md-6 col-sm-12 *@
				<div class="swiper-wrapper">
					@foreach (var post in recommendedSales)
					{
						<div class="swiper-slide">
							<div class="card b-1 hover-shadow recommend-post">
								<a class="media card-body recommend-post-body p-2" asp-action="DetailSalePost" asp-controller="Post" asp-route-id="@post.IdPost">
									<div class="media-body w-100">
										<div class="img">
											<img class="avatar avatar-xl no-radius" src="~/img/postPic/@post.Img" alt="...">
										</div>
										<div>
											<span class="fs-20 pr-16 recommend-post-content">@post.Content</span>
										</div>
										<div class="fs-14 text-fade">
											<span>Post Date: @post.Date</span>
										</div>
										<div class="fs-14 text-fade">
											<span>Type: @post.Type</span>
										</div>
										<div class="fs-14 text-fade">
											<span>Rating: @post.IdUserNavigation.Rating</span>
										</div>
									</div>
								</a>
							</div>
						</div>
					}
				</div>
				<!-- Add Pagination -->
				<div class="swiper-pagination"></div>
				<!-- Add Navigation -->
				<div class="swiper-button-next"></div>
				<div class="swiper-button-prev"></div>
			</div>
		</div>
	}

	<!-- Comment Section -->
	<div class="col-lg-12 mt-3">
		<h3 class="page-header">Comments</h3>
		@* TODO: Hiển thị danh sách comments ở đây *@

		@if (!string.IsNullOrEmpty(commentError))
		{
			<div class="alert alert-danger" role="alert">
				@commentError
			</div>
		}

		@foreach (var comment in comments.OrderByDescending(c => c.Date))
		{
			<div class="product-rating d-flex gap-2 mb-2 p-2">
				<div class="product-rating__avatar">
					<img class="rounded-circle me-lg-2 product-rating__avatar-img" src="~/img/@User.FindFirst("IMG")?.Value"
						 alt="" style="width: 40px; height: 40px;">
				</div>
				<div class="product-rating-main">
					<div class="product-rating__author-name">@comment.Name</div>
					<div class="product-rating__time">@comment.Date?.ToString("dd-MM-yyyy HH:mm:ss")</div>
					<div class="product-rating__content">@comment.Content</div>
				</div>
			</div>
		}
		<div class="inner-column wow fadeInRight card"
			 style="padding : 5px 5px 5px 5px;box-shadow: 0 3px 10px rgb(0 0 0 / 0.2);">
			<span class="lead">Add your comment</span>
			<form method="post" asp-action="PostComment" asp-asp-controller="Post" asp-controller="Post">
				<div>
					<input name="IdPost" value="@Model.IdPost" type="hidden" />
					<input name="RedirectUrl" value="DetailPost" type="hidden" />
					<textarea rows="3" class="form-control" name="Content"></textarea>
				</div>
				<div style="min-height:10px;"></div>
				<div>
					<button class="btn btn-danger" name="btn-comment">Comment</button>
				</div>
			</form>
		</div>
	</div>

	<script>
		document.addEventListener('DOMContentLoaded', function () {
			var productDescription = document.querySelector('.product-description');
			var textContainer = productDescription.querySelector('.text');
			var readMoreLink = productDescription.querySelector('.read-more');
			var shrinkButton = productDescription.querySelector('.shrink-btn');

			if (textContainer.scrollHeight > textContainer.clientHeight) {
				readMoreLink.style.display = 'inline-block'; // Hiển thị liên kết "Xem thêm" nếu nội dung vượt quá chiều rộng

				readMoreLink.addEventListener('click', function () {
					if (textContainer.style.maxHeight === 'none') {
						textContainer.style.maxHeight = '200px'; // Thu gọn nội dung lại về giới hạn chiều cao ban đầu
						readMoreLink.innerText = 'Xem thêm'; // Đổi văn bản liên kết thành "Xem thêm"
					} else {
						textContainer.style.maxHeight = 'none'; // Mở rộng nội dung
						readMoreLink.innerText = 'Thu gọn'; // Đổi văn bản liên kết thành "Thu gọn"
					}
				});
			}
		});


		document.addEventListener('DOMContentLoaded', function () {
			var inputQuantity = document.getElementById('inputQuantity');
			var increaseButton = document.getElementById('increase');
			var maxValue = @Model.Quantity; // Lấy giá trị max từ model

			var clicked = false; // Biến để kiểm tra xem đã click lần đầu tiên hay chưa

			increaseButton.addEventListener('click', function () {
				// if (!clicked) {
				// 	// Nếu chưa click lần nào thì tăng giá trị từ 1 lên 2 (hoặc 1 đơn vị tăng)
				// 	inputQuantity.value = 2; // hoặc inputQuantity.value++;
				// 	clicked = true; // Đánh dấu là đã click lần đầu tiên
				// } else {
				var currentValue = parseInt(inputQuantity.value) || 0;
				if (currentValue < maxValue) {
					inputQuantity.value = currentValue + 1;
				}
				// }
			});

			document.getElementById('decrease').addEventListener('click', function () {
				var currentValue = parseInt(inputQuantity.value) || 0;
				var minValue = 1;
				if (currentValue > minValue) {
					inputQuantity.value = currentValue - 1;
				}
			});

			inputQuantity.addEventListener('input', function () {
				var currentValue = inputQuantity.value;
				if (isNaN(currentValue) || currentValue < 1 || currentValue > maxValue) {
					inputQuantity.value = 1;
				}
			});
		});


	</script>
	<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
	<script>
		const swiper = new Swiper('.swiper', {
			// Optional parameters
			direction: 'horizontal',
			loop: true,
			slidesPerView: 3,
		@* autoplay: {
			delay: 3000, // milliseconds
			disableOnInteraction: false, // continue autoplay even when user interacts with swiper
			}, *@

			// If we need pagination
			pagination: {
			el: '.swiper-pagination',
			clickable: true,
		},

			// Navigation arrows
			navigation: {
			nextEl: '.swiper-button-next',
			prevEl: '.swiper-button-prev',
		},
								});
	</script>
</body>